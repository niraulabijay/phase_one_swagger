openapi: 3.0.0
info:
  title: Phase One
  description: Phase One
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Admin
  - name: Admin > HouseCategory
  - name: Admin > HouseFeature
  - name: Admin > HouseAmenity
  - name: Admin > JobCategory
  - name: Admin > BusinessCategory
  - name: Admin > Ads
  - name: Admin > Ad Category
  - name: Client
  - name: Client > House
  - name: Client > Job
  - name: Client > Business
  - name: Client > Business Category
  - name: Client > Media
  - name: Client > Ads
  - name: Public
paths:
  /admin/house-category:
    post:
      tags:
        - Admin > HouseCategory
      summary: store - store category of house
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: category 1
                icon: ''
                description: description 1
                order_level: ''
                parent_id: ''
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/house-category/{house_category_id}:
    post:
      tags:
        - Admin > HouseCategory
      summary: update - update category of house
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                title: category edit
                description: description edit
                order_level: ''
                parent_id: ''
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: house_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > HouseCategory
      summary: destroy - delete single category of house
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: house_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/house-feature:
    post:
      tags:
        - Admin > HouseFeature
      summary: store - store feature of house
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Title one
                icon:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/house-feature/{house_feature_id}:
    post:
      tags:
        - Admin > HouseFeature
      summary: update - update feature of house
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                title:
                  type: string
                  example: title edit
                icon:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: house_feature_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > HouseFeature
      summary: destroy - destroy single feature of house
      security:
        - bearerAuth: []
      parameters:
        - name: house_feature_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/house-amenity:
    post:
      tags:
        - Admin > HouseAmenity
      summary: store - store amenity of house
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: amenity 1
                icon:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/house-amenity/{house_amenity_id}:
    post:
      tags:
        - Admin > HouseAmenity
      summary: update - update amenity of house
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: amenity edit
                icon:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: house_amenity_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > HouseAmenity
      summary: destroy - destroy single amenity of house
      security:
        - bearerAuth: []
      parameters:
        - name: house_amenity_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/job-category:
    post:
      tags:
        - Admin > JobCategory
      summary: store - store category of job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: category 1
                icon: ''
                description: description 1
                order_level: ''
                parent_id: ''
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/job-category/{job_category_id}:
    post:
      tags:
        - Admin > JobCategory
      summary: update - update category of job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                title: category edit
                icon: ''
                description: description edit
                order_level: ''
                parent_id: ''
                status: 1
      security:
        - bearerAuth: []
      parameters:
        - name: job_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > JobCategory
      summary: destroy - delete single category of job
      security:
        - bearerAuth: []
      parameters:
        - name: job_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-category:
    post:
      tags:
        - Admin > BusinessCategory
      summary: store - store category of business
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: category 1
                description: description 1
                order_level: ''
                parent_id: ''
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-category/1:
    post:
      tags:
        - Admin > BusinessCategory
      summary: update - update category of business
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                title: category edit
                description: description edit
                order_level: ''
                parent_id: ''
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-category/{business_category_id}:
    delete:
      tags:
        - Admin > BusinessCategory
      summary: destroy - delete single category of business
      security:
        - bearerAuth: []
      parameters:
        - name: business_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ad:
    post:
      tags:
        - Admin > Ads
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title 1
                ad_category:
                  type: string
                  example: Homepage
                image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ad/{ad_id}:
    post:
      tags:
        - Admin > Ads
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title 1 edited
                ad_category:
                  type: string
                  example: Homepage
                _method:
                  type: string
                  example: PUT
                image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ad_id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Ads
      summary: destroy
      security:
        - bearerAuth: []
      parameters:
        - name: ad_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ad-category:
    get:
      tags:
        - Admin > Ad Category
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/login:
    post:
      tags:
        - Admin
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@admin.com
                password:
                  type: integer
                  example: '1234'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/logout:
    get:
      tags:
        - Admin
      summary: logout
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/house:
    post:
      tags:
        - Client > House
      summary: store - store house
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                house_category_id:
                  type: integer
                  example: '1'
                title:
                  type: string
                  example: saldkjw
                expiry_date:
                  type: string
                  example: '2022-05-04'
                price:
                  type: integer
                  example: '1234'
                address:
                  type: string
                  example: alsjdwlkdja
                type:
                  type: string
                  example: buy
                status_id:
                  type: integer
                  example: '1'
                feature_image:
                  type: string
                  format: binary
                gallery[]:
                  type: string
                  format: binary
                feature[]:
                  type: integer
                  example: '1'
                amenity[]:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/house/{house_id}:
    post:
      tags:
        - Client > House
      summary: update - update house
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                house_category_id:
                  type: integer
                  example: '1'
                title:
                  type: string
                  example: saldkjw
                expiry_date:
                  type: string
                  example: '2022-05-04'
                price:
                  type: integer
                  example: '1234'
                address:
                  type: string
                  example: alsjdwlkdja
                type:
                  type: string
                  example: buy
                status_id:
                  type: integer
                  example: '1'
                feature_image:
                  type: string
                  format: binary
                gallery[]:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: house_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Client > House
      summary: delete- delete a single house
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: house_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/my-houses/:
    get:
      tags:
        - Client > House
      summary: index- get my houses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/job:
    post:
      tags:
        - Client > Job
      summary: store -store job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                job_category_id: 1
                title: job 1
                image: ''
                description: description 1
                skills: skill description
                benefits: benefit description
                requirements: requirement description
                additional_information: additional informtion
                address: ''
                is_offsite: 1
                is_part_time: 0
                available_from: '2022-01-01'
                expiry_date: '2022-12-20'
                experience: 2
                level: mid-level
                salary_type: monthly
                is_salary_negotiable: 1
                salary: 35000
                is_salary_visible: 1
                place_id: ''
                longitude: ''
                latitude: ''
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/job/{job_id}:
    post:
      tags:
        - Client > Job
      summary: update - update job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                job_category_id: 1
                title: job editasdw
                image: ''
                description: description edit
                skills: skill description edit
                benefits: benefit description edit
                requirements: requirement description edit
                additional_information: additional informtion edit
                address: ''
                is_offsite: 1
                is_part_time: 0
                available_from: '2022-01-01'
                expiry_date: '2022-12-20'
                experience: 2
                level: mid-level
                salary_type: monthly
                is_salary_negotiable: 1
                salary: 35000
                is_salary_visible: 1
                place_id: ''
                longitude: ''
                latitude: ''
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Client > Job
      summary: destroy - delete single job
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/job:
    get:
      tags:
        - Public
      summary: get all job (no auth required)
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/job/{job_id}:
    get:
      tags:
        - Public
      summary: get single job (no auth requried)
      security:
        - noauthAuth: []
      parameters:
        - name: job_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/business:
    post:
      tags:
        - Client > Business
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_category_id:
                  type: integer
                  example: '1'
                title:
                  type: string
                  example: New Business
                phone:
                  type: integer
                  example: '312113'
                email:
                  type: string
                  example: awdadljw@email.comasdw
                banner:
                  type: string
                  format: binary
                profile_picture:
                  type: string
                  format: binary
                gallery[]:
                  type: string
                  format: binary
                description:
                  type: string
                  example: description
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/business/{business_id}:
    post:
      tags:
        - Client > Business
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                business_category_id:
                  type: integer
                  example: '1'
                title:
                  type: string
                  example: New Businessasdw
                phone:
                  type: integer
                  example: '312113'
                email:
                  type: string
                  example: adljw@emial.com
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: business_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Client > Business
      summary: destroy
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: business_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-category:
    get:
      tags:
        - Public
      summary: get all business category (no auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-category/{business_category_id}:
    get:
      tags:
        - Public
      summary: get single business category (no auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: business_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/media/{image_id}:
    delete:
      tags:
        - Client > Media
      summary: destroy - delete single house
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: image_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/ad/{ad_category}/category:
    get:
      tags:
        - Client > Ads
      summary: get ads by category
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ad_category
          in: path
          schema:
            type: string
          required: true
          description: put value 'all' if you want get ads from all categories
          example: all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Client
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@user.com
                password:
                  type: integer
                  example: '1234'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register:
    post:
      tags:
        - Client
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@user.com
                password:
                  type: integer
                  example: '1234'
                name:
                  type: string
                  example: hello world
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/logout:
    get:
      tags:
        - Client
      summary: logout
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: X-Requested-With
          in: header
          schema:
            type: string
          example: XMLHttpRequest
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house-category:
    get:
      tags:
        - Public
      summary: get all house category (no auth required)
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house-category/{house_category_id}:
    get:
      tags:
        - Public
      summary: get single house category (no auth required) Copy
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: house_category_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house-feature:
    get:
      tags:
        - Public
      summary: get all feature (no auth required)
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house-feature/{house_feature_id}:
    get:
      tags:
        - Public
      summary: get single feature (no auth required) Copy
      parameters:
        - name: house_feature_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house-amenity:
    get:
      tags:
        - Public
      summary: get all amenity (no auth required)
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house-amenity/{house_amenity_id}:
    get:
      tags:
        - Public
      summary: get single amenity (no auth required) Copy
      parameters:
        - name: house_amenity_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house:
    get:
      tags:
        - Public
      summary: get all house (no auth required)
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/house/{house_id}:
    get:
      tags:
        - Public
      summary: get single house (no auth requried)
      security:
        - noauthAuth: []
      parameters:
        - name: house_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/job-category/{job_category_id}:
    get:
      tags:
        - Public
      summary: get single job category (no auth required)
      security:
        - bearerAuth: []
      parameters:
        - name: job_category_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/job-category:
    get:
      tags:
        - Public
      summary: get all job category (no auth required)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business:
    get:
      tags:
        - Public
      summary: get all business (no auth required)
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business/{business_id}:
    get:
      tags:
        - Public
      summary: get single business (no auth requried)
      security:
        - noauthAuth: []
      parameters:
        - name: business_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ad:
    get:
      tags:
        - Public
      summary: get ads by category
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ad_category
          in: query
          schema:
            type: string
          description: 'remove this parameter if you all ads '
          example: homepage
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ad/{ad_id}:
    get:
      tags:
        - Public
      summary: get single ad
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ad_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/status:
    get:
      tags:
        - Public
      summary: get all status (active and inactive)
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
